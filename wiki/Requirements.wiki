#summary Various requirements for the processing code.

= Introduction =

== Database requirements ==
  * SQLite
    [http://www.sqlite.org/download.html Download] It is import to note that when building the SQLite libraries the configure parameter --enable-dynamic-extensions be used. The spatialite library is an extension that we load into the sqlite space.
  * Spatialite
    [http://www.gaia-gis.it/spatialite/ Download] The requirements are also listed on this page. Notes on the building of the library can be found [http://code.google.com/p/xenia/wiki/SpatialLite here].
   

== Python Packages ==

Python version required: 2.5
  # [http://codespeak.net/lxml/installation.html lxml]
  # [http://trac.osgeo.org/gdal/wiki/GdalOgrInPython gdal]
    On my test bed I built the gdal source, then installed into the default directory. In python when calling "from osgeo import gdal" I kept getting an error saying libgdal.so.1 could not be found. Doing an ldd on gdal.so in the site-packages dir for the gdal package, I saw that the shared object couldn't be found. Unsure why that was, I tried adding a soft link in a couple of places to no avail. I ended up editing ld.so.conf and added /usr/local/lib, which is where on Debian the default installation of the gdal libs went. Then ran ldconfig and another ldd gdal.so showed the library could then be found. I am unsure of where
    it was looking initally.
  # [http://www.scipy.org/Download numpy]
  # [http://oss.itsystementwicklung.de/trac/pysqlite/wiki/PysqlitePackages pysqlite]